x-optionals:
  gpus:
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]
    environment:
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: all
  devices:
    devices:
      - "/dev/video0"
      - "/dev/ttyACM0"
        #- "/dev/ttyUSB0"
  network_mode_host:
    network_mode: "host"
  x11:
    volumes:
      - "/tmp/.X11-unix:/tmp/.X11-unix"
    environment:
      DISPLAY: "${DISPLAY}"
  vnc:
    environment:
      DISPLAY: "vnc:0.0"
name: art
services:
  common:
    env_file:
      - atk.env
    build:
      context: "./"
      network: "host"
      args:
        PROJECT: "${COMPOSE_PROJECT_NAME}"
        ROS_DISTRO: "${ROS_DISTRO}"
        USER_UID: "${USER_UID:-1000}"
        USER_GID: "${USER_GID:-1000}"
    working_dir: "/home/${COMPOSE_PROJECT_NAME}/${COMPOSE_PROJECT_NAME}"
    volumes:
      - "./:/home/${COMPOSE_PROJECT_NAME}/${COMPOSE_PROJECT_NAME}"
    tty: true
  dev:
    extends: common
    image: "atk/${COMPOSE_PROJECT_NAME}:dev"
    hostname: "${COMPOSE_PROJECT_NAME}-dev"
    container_name: "${COMPOSE_PROJECT_NAME}-dev"
    build:
      dockerfile: "./docker/dev.dockerfile"
      args:
        IMAGE_BASE: "ubuntu"
        IMAGE_TAG: "22.04"
        APT_DEPENDENCIES: "bash zsh vim git git-lfs python3-pip python3-tk python3-opencv ros-${ROS_DISTRO}-usb-cam ros-${ROS_DISTRO}-tf-transformations ros-${ROS_DISTRO}-rqt-graph ros-${ROS_DISTRO}-rosbridge-suite"
        PIP_REQUIREMENTS: "pandas matplotlib numpy>=1.19 opencv-python tornado black Pillow torch torchvision pyserial nvidia-pyindex transforms3d scipy"
        USER_GROUPS: "dialout video"
        USER_SHELL_ADD_ONS: ". /home/${COMPOSE_PROJECT_NAME}/${COMPOSE_PROJECT_NAME}/workspace/install/setup.bash"
    working_dir: "/home/${COMPOSE_PROJECT_NAME}/${COMPOSE_PROJECT_NAME}/workspace" 
    ports:
      - "127.0.0.1:9091:9090"
  chrono:
    extends: common
    image: "atk/${COMPOSE_PROJECT_NAME}:chrono"
    hostname: "${COMPOSE_PROJECT_NAME}-chrono"
    container_name: "${COMPOSE_PROJECT_NAME}-chrono"
    build:
      dockerfile: "./docker/chrono.dockerfile"
      args:
        IMAGE_BASE: "nvidia/cuda"
        IMAGE_TAG: "12.2.0-devel-ubuntu22.04"
        APT_DEPENDENCIES: "cmake cmake-curses-gui"
        PIP_DEPENDENCIES: ""
        OPTIX_SCRIPT: "docker/data/NVIDIA-OptiX-SDK-7.7.0-linux64-x86_64.sh"
        CHRONO_BRANCH: "feature/ros"
    working_dir: "/home/${COMPOSE_PROJECT_NAME}/${COMPOSE_PROJECT_NAME}/sim"
  vnc:
    image: "atk/${COMPOSE_PROJECT_NAME}:vnc"
    hostname: "${COMPOSE_PROJECT_NAME}-vnc"
    container_name: "${COMPOSE_PROJECT_NAME}-vnc"
    build:
      context: "./"
      dockerfile: "./docker/vnc.dockerfile"
      network: "host"
      args:
        VNC_PASSWORD: "${COMPOSE_PROJECT_NAME}"
    ports:
      - "127.0.0.1:8080-8099:8080"
      - "127.0.0.1:5900-5999:5900"
networks:
  default:
    name: "${COMPOSE_PROJECT_NAME}"
