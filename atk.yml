x-optionals:
  gpus:
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]
    environment:
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: all
  devices:
    devices:
      - "/dev/video0"
      - "/dev/ttyACM0"
      - "/dev/ttyUSB0"
  network_mode_host:
    network_mode: "host"
  x11:
    volumes:
      - "/tmp/.X11-unix:/tmp/.X11-unix"
    environment:
      DISPLAY: "${DISPLAY:-}"
  vnc:
    environment:
      DISPLAY: "vnc:0.0"
name: art
services:
  common:
    env_file: "atk.env"
    build:
      context: "./"
      network: "host"
      args:
        PROJECT: "${COMPOSE_PROJECT_NAME}"
        ROS_DISTRO: "${ROS_DISTRO}"
        USER_UID: "${USER_UID:-1000}"
        USER_GID: "${USER_GID:-1000}"
        APT_DEPENDENCIES: "${DEFAULT_APT_DEPENDENCIES:-} ros-${ROS_DISTRO}-robot-localization"
        PIP_REQUIREMENTS: "${DEFAULT_PIP_REQUIREMENTS:-}"
    working_dir: "/home/${COMPOSE_PROJECT_NAME}/${COMPOSE_PROJECT_NAME}"
    volumes:
      - "./:/home/${COMPOSE_PROJECT_NAME}/${COMPOSE_PROJECT_NAME}"
    tty: true
  dev:
    extends: common
    image: "${DOCKERHUB_USERNAME}/${COMPOSE_PROJECT_NAME}:dev"
    hostname: "${COMPOSE_PROJECT_NAME}-dev"
    container_name: "${COMPOSE_PROJECT_NAME}-dev"
    build:
      dockerfile: "./docker/dev.dockerfile"
      args:
        IMAGE_BASE: "ubuntu"
        IMAGE_TAG: "22.04"
        USER_GROUPS: "dialout video"
        USER_SHELL_ADD_ONS: ". /home/${COMPOSE_PROJECT_NAME}/${COMPOSE_PROJECT_NAME}/workspace/install/setup.bash"
        PIP_REQUIREMENTS: "${DEFAULT_PIP_REQUIREMENTS} tensorrt"
        ROSDEP_METAPACKAGE: "art_dev_meta"
      x-bake:
        platforms:
          - linux/amd64
          - linux/arm64
          - darwin/amd64
          - darwin/arm64
          - windows/amd64
          - windows/arm64
        no-cache: true
    working_dir: "/home/${COMPOSE_PROJECT_NAME}/${COMPOSE_PROJECT_NAME}/workspace"
  agx:
    extends: dev
    build:
      args:
        IMAGE_BASE: "dustynv/ros"
        IMAGE_TAG: "humble-pytorch-l4t-r35.3.1"
        ROS_INSTALL_PREFIX: "/opt/ros/${ROS_DISTRO}/install"
        APT_DEPENDENCIES: "${DEFAULT_APT_DEPENDENCIES} ros-${ROS_DISTRO}-robot-localization"
        PIP_REQUIREMENTS: "${DEFAULT_PIP_REQUIREMENTS}"
        ROSDEP_SKIP_KEYS: "python3-torchvision tf_transformations"
  art5:
    extends: agx
    image: "${DOCKERHUB_USERNAME}/${COMPOSE_PROJECT_NAME}:art5"
    hostname: "${COMPOSE_PROJECT_NAME}-art5"
    container_name: "${COMPOSE_PROJECT_NAME}-art5"
    build:
      dockerfile: "./docker/art5.dockerfile"
      args:
        ROSDEP_METAPACKAGE: "art_art5_meta"
  oak:
    extends: agx
    image: "${DOCKERHUB_USERNAME}/${COMPOSE_PROJECT_NAME}:oak"
    hostname: "${COMPOSE_PROJECT_NAME}-oak"
    container_name: "${COMPOSE_PROJECT_NAME}-oak"
    build:
      dockerfile: "./docker/oak.dockerfile"
      args:
        ROSDEP_METAPACKAGE: "art_oak_meta"
  chrono:
    extends: common
    image: "${DOCKERHUB_USERNAME}/${COMPOSE_PROJECT_NAME}:chrono"
    hostname: "${COMPOSE_PROJECT_NAME}-chrono"
    container_name: "${COMPOSE_PROJECT_NAME}-chrono"
    build:
      dockerfile: "./docker/chrono.dockerfile"
      args:
        IMAGE_BASE: "nvidia/cuda"
        IMAGE_TAG: "12.2.0-devel-ubuntu22.04"
        APT_DEPENDENCIES: "cmake cmake-curses-gui"
        PIP_DEPENDENCIES: ""
        OPTIX_SCRIPT: "docker/data/NVIDIA-OptiX-SDK-7.7.0-linux64-x86_64.sh"
        CHRONO_BRANCH: "feature/ros"
    working_dir: "/home/${COMPOSE_PROJECT_NAME}/${COMPOSE_PROJECT_NAME}/sim"
  vnc:
    image: "${DOCKERHUB_USERNAME}/${COMPOSE_PROJECT_NAME}:vnc"
    hostname: "${COMPOSE_PROJECT_NAME}-vnc"
    container_name: "${COMPOSE_PROJECT_NAME}-vnc"
    build:
      context: "./"
      dockerfile: "./docker/vnc.dockerfile"
      network: "host"
      args:
        VNC_PASSWORD: "${COMPOSE_PROJECT_NAME}"
    ports:
      - "127.0.0.1:8080-8099:8080"
      - "127.0.0.1:5900-5999:5900"
networks:
  default:
    name: "${COMPOSE_PROJECT_NAME}"
