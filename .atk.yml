project: art
default_services: 
  - dev
  - vnc
custom_cli_arguments:
  --gpus:
    argparse:
      action: 'store_true'
    dev:
      docker:
        deploy:
          resources:
            reservations:
              devices:
                - driver: nvidia
                  capabilities: [gpu]
      singularity:
        start:
          options:
            - nv
    chrono:
      docker:
        deploy:
          resources:
            reservations:
              devices:
                - driver: nvidia
                  capabilities: [gpu]
      singularity:
        start:
          options:
            - nv
  --devices:
    argparse:
      action: 'store_true'
    dev:
      devices:
        - /dev/video0
        - /dev/ttyACM0
  --optix:
    argparse:
      required: true
    chrono-conda:
      volumes:
        - "@{optix}:/opt/optix-7.2"
  --piplocals:
    argparse:
      action: 'store_true'
    deploy:
      volumes: 
        - "$HOME/.local/:/home/@{container_username}/.local"
external:
  db:
    bags:
      - id: "1rmO5F8yrIP61W409IxPI-ETzInRyV3rR"
        output: "@{project_root}/demos/bags/ATK-02-25-2022-04-30-30"
      - id: "1bHY8xFsCbtEuF2PTdwS7qdTPV0z479hZ"
        output: "@{project_root}/demos/bags/ATK-02-25-2022-03-19-00"
services:
  dev:
    build:
      args:
        APT_DEPENDENCIES: "bash zsh vim git git-lfs python3-pip python3-tk python3-opencv"
        PIP_REQUIREMENTS: "wa_simulator pandas matplotlib numpy>=1.19 opencv-python tornado black Pillow torch torchvision pyserial"
  vnc:
    build:
      args:
        VNC_PASSWORD: ""
  deploy:
    image: "atk/@{project}:deploy"
    hostname: "@{project}-deploy"
    container_name: "@{project}-deploy"
    build:
      context: ./containers/deploy
      dockerfile: ./deploy.dockerfile
      network: "host"
      args:
        IMAGE: "atk/@{project}:dev"
    volumes: 
      - "@{project_root}:/home/@{container_username}/@{project}"
    tty: true
  chrono:
    image: "atk/@{project}:chrono"
    hostname: "@{project}-chrono"
    container_name: "@{project}-chrono"
    build:
      context: ./containers/chrono
      dockerfile: ./chrono.dockerfile
      network: "host"
      args:
        USERNAME: "@{project}"
        USERHOME: "/home/@{container_username}"
        USERSHELL: "bash"
        USERSHELLPATH: "/bin/bash"
        USERSHELLPROFILE: "/home/@{container_username}/.bashrc"
        APT_DEPENDENCIES: "libirrlicht-dev libnvidia-gl-495"
        CONDA_CHANNELS: "aryoung5 anaconda conda-forge"
        CONDA_DEPENDENCIES: "python=3.8.12 pip pychrono cudatoolkit anaconda-client conda-build"
        PIP_DEPENDENCIES: ""
    environment:
      USER_UID: "@{uid}"
      USER_GID: "@{gid}"
      NVIDIA_VISIBLE_DEVICES: "all"
      NVIDIA_DRIVER_CAPABILITIES: "all"
    ports:
      - "50000:50000"
    working_dir: "/home/@{container_username}/@{project}/sim"
    volumes: 
      - "@{project_root}:/home/@{container_username}/@{project}"
    tty: true
  chrono-conda:
    image: "atk/@{project}:chrono-conda"
    build:
      context: ./containers/chrono-conda
      dockerfile: ./chrono-conda.dockerfile
      network: "host"
      args:
        APT_DEPENDENCIES: "libirrlicht-dev vim ccache libeigen3-dev xorg xauth libxxf86vm-dev freeglut3-dev openbox libglfw3-dev"
        CONDA_CHANNELS: "anaconda conda-forge"
        CONDA_DEPENDENCIES: "python=3.8.12 pip pychrono cudatoolkit anaconda-client conda-build"
        PIP_DEPENDENCIES: ""
